name: Test and Release

on:
  push:
  pull_request:

jobs:
  test:
    name: Test on ${{ matrix.os }} | Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16, 18, 20, 22, latest]
        os: [ubuntu-latest, ubuntu-22.04, windows-latest, macos-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build:dev

      - name: Run Tests
        run: npm test

      - name: Coverage
        run: npm run coverage:ci
        if: always()

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.os }}-node-${{ matrix.node-version }}
          path: |
            coverage/**/*

  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Pack
        run: npm pack

      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          generate_release_notes: true
          files: '*.tgz'
